{"version":3,"file":"static/js/518.02f6a982.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAS,mCAAG,WAAMC,GAAN,uFACFC,EAAAA,EAAAA,IAAA,0DACgCD,EADhC,oBACkDF,IAFhD,cACjBI,EADiB,yBAIhBA,GAJgB,2CAAH,sDAMTC,EAAY,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,iFACuDH,IAFlD,cACpBI,EADoB,yBAInBA,GAJmB,2CAAH,qDAOZE,EAAe,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,oBACiCP,IAFzB,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,sDAOfI,EAAY,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCP,IAFpC,cACpBI,EADoB,yBAKnBA,GALmB,2CAAH,sDAOZK,EAAe,mCAAG,WAAMF,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCP,IAFjC,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,qD,8LC7BfM,EAAwBC,EAAAA,EAAAA,IAAH,sLAUrBC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,oOAaVG,EAAaH,EAAAA,EAAAA,IAAH,yGAOVI,EAAaJ,EAAAA,EAAAA,GAAH,0DAKVK,EAAYL,EAAAA,EAAAA,EAAH,yFAMTM,EAAgBN,EAAAA,EAAAA,GAAH,wGAMbO,EAAeP,EAAAA,EAAAA,EAAH,oKAUZQ,EAAcR,EAAAA,EAAAA,GAAH,uFAMXS,EAAaT,EAAAA,EAAAA,GAAH,0EAMVU,EAAYV,EAAAA,EAAAA,GAAH,mEAKTW,EAAsBX,EAAAA,EAAAA,EAAH,uFAMnBY,EAAqBZ,EAAAA,EAAAA,GAAH,4EAMlBa,EAAqBb,EAAAA,EAAAA,GAAH,mEAKlBc,GAAqBd,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,yFAMlBe,GAAkBf,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,2F,SCJ5B,EAzEqB,WAAO,IAAD,EACnBgB,GAASC,EAAAA,EAAAA,MACf,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,YAAxB,eAAOG,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,QAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,MAC1CC,QAAQC,MAoBR,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,mHAE2BC,EAAAA,GAA0BhB,EAAOiB,SAF5D,gBAEYC,EAFZ,EAEYA,KACRd,EAASc,GACHC,EAAc,IAAIC,KAAKF,EAAKG,cAC5BC,EAAcH,EAAYI,cAChCjB,EAAQgB,GANZ,kDAQIT,QAAQC,IAAI,UARhB,uGADc,uBAAC,WAAD,wBAadU,EACD,GAAE,CAACxB,EAAOiB,WAGT,SAAClC,EAAD,UACGoB,IACC,4BACE,SAAClB,EAAD,CAAYwC,GAAIhB,EAAUiB,QAA1B,sBAECvB,EAAMwB,aACL,SAACxC,EAAD,CACEyC,IAAG,0CAAqCzB,EAAMwB,aAC9CE,IAAK1B,EAAM2B,kBAGb,SAAC3C,EAAD,CAAYyC,IA9BpB,yGA8B8CC,IAAK1B,EAAM2B,kBAEnD,UAAC1C,EAAD,WACGe,EAAM2B,eADT,KAC2BzB,EAD3B,QAGA,UAAChB,EAAD,0BACe0C,OAAOC,SAA8B,GAArB7B,EAAM8B,cADrC,QAGA,SAAC3C,EAAD,wBACA,SAACC,EAAD,UAAeY,EAAM+B,YACrB,SAAC1C,EAAD,sBACA,SAACC,EAAD,UACGU,EAAMgC,OAAOC,KAAI,SAAAC,GAAK,OACrB,SAAC3C,EAAD,UAA2B2C,EAAMC,MAAjBD,EAAMzD,GADD,OAIzB,SAACe,EAAD,sCACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAoB2B,GAAE,kBAAazB,EAAOiB,QAApB,SAAtB,qBAIF,SAACpB,EAAD,WACE,SAACE,EAAD,CAAiB0B,GAAE,kBAAazB,EAAOiB,QAApB,YAAnB,2BAKJ,SAAC,KAAD,QAKT,C","sources":["api-axios.js","styled/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0ca8801a722358b1eb2bcacbc83f2a91';\n\nexport const getMovies = async search => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}`\n  );\n  return result;\n};\nexport const getTopMovies = async () => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return result;\n};\n\nexport const getMovieDetails = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n\n  return result;\n};\nexport const getMovieCast = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return result;\n};\nexport const getMovieReviews = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return result;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MovieDetailsContainer = styled.div`\n  background-color: #000;\n  color: #fff;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const BackButton = styled(Link)`\n  background-color: #e50914;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 16px;\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  text-decoration: none;\n`;\n\nexport const MovieImage = styled.img`\n  max-width: 200px;\n  height: auto;\n  margin-bottom: 5px;\n  margin-top: 5px;\n`;\n\nexport const MovieTitle = styled.h3`\n  font-size: 22px;\n  margin: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5pxpx;\n`;\n\nexport const OverviewTitle = styled.h4`\n  font-size: 16px;\n  margin-top: 20px;\n  margin-bottom: 5px;\n  margin: 0px;\n`;\nexport const OverviewText = styled.p`\n  font-size: 10px;\n  width: 700px;\n  margin-top: 5px;\n  text-align: center;\n\n  margin-inline-start: auto;\n  margin-inline-end: auto;\n`;\n\nexport const GenresTitle = styled.h4`\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const GenreItem = styled.li`\n  margin-bottom: 0px;\n  font-size: 10px;\n`;\n\nexport const AdditionalInfoTitle = styled.p`\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0px;\n`;\n\nexport const AdditionalInfoItem = styled.li`\n  font-size: 12px;\n  margin-bottom: 5px;\n`;\n\nexport const AdditionalInfoLink = styled(Link)`\n  color: #e50914;\n  text-decoration: none;\n  font-size: 12px;\n`;\n\nexport const CastReviewsLink = styled(Link)`\n  color: #e50914;\n  text-decoration: none;\n  font - size: 12px;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport * as GetMovies from '../api-axios';\n\nimport {\n  MovieDetailsContainer,\n  BackButton,\n  MovieImage,\n  MovieTitle,\n  UserScore,\n  OverviewTitle,\n  GenresTitle,\n  GenresList,\n  GenreItem,\n  AdditionalInfoTitle,\n  AdditionalInfoList,\n  AdditionalInfoItem,\n  AdditionalInfoLink,\n  CastReviewsLink,\n  OverviewText,\n} from '../styled/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const [movie, setMovie] = useState();\n  const [year, setYear] = useState();\n  const location = useLocation();\n  const beackLink = useRef(location?.state?.from);\n  console.log();\n  const placeholderImageURL =\n    'https://kartinki.pics/uploads/posts/2022-03/1646240334_2-kartinkin-net-p-kartinki-krasivaya-noch-2.jpg';\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const { data } = await GetMovies.getMovieDetails(params.movieId);\n        setMovie(data);\n        const releaseDate = new Date(data.release_date);\n        const releaseYear = releaseDate.getFullYear();\n        setYear(releaseYear);\n      } catch (error) {\n        console.log('Error!');\n      } finally {\n      }\n    }\n    getMovie();\n  }, [params.movieId]);\n\n  return (\n    <MovieDetailsContainer>\n      {movie && (\n        <div>\n          <BackButton to={beackLink.current}>Go Beack</BackButton>\n\n          {movie.poster_path ? (\n            <MovieImage\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n          ) : (\n            <MovieImage src={placeholderImageURL} alt={movie.original_title} />\n          )}\n          <MovieTitle>\n            {movie.original_title} ({year})\n          </MovieTitle>\n          <UserScore>\n            User Score: {Number.parseInt(movie.vote_average * 10)}%\n          </UserScore>\n          <OverviewTitle>Overview</OverviewTitle>\n          <OverviewText>{movie.overview}</OverviewText>\n          <GenresTitle>Genres</GenresTitle>\n          <GenresList>\n            {movie.genres.map(genre => (\n              <GenreItem key={genre.id}>{genre.name}</GenreItem>\n            ))}\n          </GenresList>\n          <AdditionalInfoTitle>Additional Information</AdditionalInfoTitle>\n          <AdditionalInfoList>\n            <AdditionalInfoItem>\n              <AdditionalInfoLink to={`/movies/${params.movieId}/cast`}>\n                Cast\n              </AdditionalInfoLink>\n            </AdditionalInfoItem>\n            <AdditionalInfoItem>\n              <CastReviewsLink to={`/movies/${params.movieId}/reviews`}>\n                Reviews\n              </CastReviewsLink>\n            </AdditionalInfoItem>\n          </AdditionalInfoList>\n          <Outlet />\n        </div>\n      )}\n    </MovieDetailsContainer>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","getMovies","search","axios","result","getTopMovies","getMovieDetails","id","getMovieCast","getMovieReviews","MovieDetailsContainer","styled","BackButton","Link","MovieImage","MovieTitle","UserScore","OverviewTitle","OverviewText","GenresTitle","GenresList","GenreItem","AdditionalInfoTitle","AdditionalInfoList","AdditionalInfoItem","AdditionalInfoLink","CastReviewsLink","params","useParams","useState","movie","setMovie","year","setYear","location","useLocation","beackLink","useRef","state","from","console","log","useEffect","GetMovies","movieId","data","releaseDate","Date","release_date","releaseYear","getFullYear","getMovie","to","current","poster_path","src","alt","original_title","Number","parseInt","vote_average","overview","genres","map","genre","name"],"sourceRoot":""}