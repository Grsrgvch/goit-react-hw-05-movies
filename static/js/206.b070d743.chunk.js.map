{"version":3,"file":"static/js/206.b070d743.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAS,mCAAG,WAAMC,GAAN,uFACFC,EAAAA,EAAAA,IAAA,0DACgCD,EADhC,oBACkDF,IAFhD,cACjBI,EADiB,yBAIhBA,GAJgB,2CAAH,sDAMTC,EAAY,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,iFACuDH,IAFlD,cACpBI,EADoB,yBAInBA,GAJmB,2CAAH,qDAOZE,EAAe,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,oBACiCP,IAFzB,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,sDAOfI,EAAY,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCP,IAFpC,cACpBI,EADoB,yBAKnBA,GALmB,2CAAH,sDAOZK,EAAe,mCAAG,WAAMF,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCP,IAFjC,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,qD,8LC7BfM,EAAwBC,EAAAA,EAAAA,IAAH,sLAUrBC,EAAaD,EAAAA,EAAAA,OAAH,yMAYVE,EAAaF,EAAAA,EAAAA,IAAH,yGAOVG,EAAaH,EAAAA,EAAAA,GAAH,0DAKVI,EAAYJ,EAAAA,EAAAA,EAAH,yFAMTK,EAAgBL,EAAAA,EAAAA,GAAH,wGAMbM,EAAeN,EAAAA,EAAAA,EAAH,iFAMZO,EAAcP,EAAAA,EAAAA,GAAH,uFAMXQ,EAAaR,EAAAA,EAAAA,GAAH,0EAMVS,EAAYT,EAAAA,EAAAA,GAAH,mEAKTU,EAAsBV,EAAAA,EAAAA,EAAH,uFAMnBW,EAAqBX,EAAAA,EAAAA,GAAH,4EAMlBY,EAAqBZ,EAAAA,EAAAA,GAAH,mEAKlBa,GAAqBb,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAH,wFAMlBe,GAAkBf,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAH,0F,SCb5B,EA3DqB,WACnB,IAAMgB,GAASC,EAAAA,EAAAA,MACf,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAE2BC,EAAAA,GAA0BR,EAAOS,SAF5D,gBAEYC,EAFZ,EAEYA,KACRN,EAASM,GAHb,gDAKIC,QAAQC,IAAI,UALhB,sGADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACb,EAAOS,WAET,SAAC1B,EAAD,UACGoB,IACC,4BACE,SAAClB,EAAD,CAAY6B,QAnBL,WACbT,GAAU,EACX,EAiBO,sBACA,SAACnB,EAAD,CACE6B,IAAG,0CAAqCZ,EAAMa,aAC9CC,IAAKd,EAAMe,kBAEb,UAAC/B,EAAD,WACGgB,EAAMe,eADT,KAC2Bf,EAAMgB,aADjC,QAGA,UAAC/B,EAAD,0BAAwBe,EAAMiB,WAA9B,QACA,SAAC/B,EAAD,wBACA,SAACC,EAAD,UAAea,EAAMkB,YACrB,SAAC9B,EAAD,sBACA,SAACC,EAAD,UACGW,EAAMmB,OAAOC,KAAI,SAAAC,GAAK,OACrB,SAAC/B,EAAD,UAA2B+B,EAAMC,MAAjBD,EAAM5C,GADD,OAIzB,SAACc,EAAD,sCACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAoB6B,GAAE,kBAAa1B,EAAOS,QAApB,SAAtB,qBAIF,SAACb,EAAD,WACE,SAACG,EAAD,CAAiB2B,GAAE,kBAAa1B,EAAOS,QAApB,YAAnB,2BAKJ,SAAC,KAAD,QAKT,C","sources":["api-axios.js","styled/MovieDetails.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0ca8801a722358b1eb2bcacbc83f2a91';\n\nexport const getMovies = async search => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}`\n  );\n  return result;\n};\nexport const getTopMovies = async () => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return result;\n};\n\nexport const getMovieDetails = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n\n  return result;\n};\nexport const getMovieCast = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return result;\n};\nexport const getMovieReviews = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return result;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MovieDetailsContainer = styled.div`\n  background-color: #000;\n  color: #fff;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const BackButton = styled.button`\n  background-color: #e50914;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 8px;\n  position: absolute;\n  top: 50px;\n  left: 10px;\n`;\n\nexport const MovieImage = styled.img`\n  max-width: 200px;\n  height: auto;\n  margin-bottom: 5px;\n  margin-top: 5px;\n`;\n\nexport const MovieTitle = styled.h3`\n  font-size: 22px;\n  margin: 0;\n`;\n\nexport const UserScore = styled.p`\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5pxpx;\n`;\n\nexport const OverviewTitle = styled.h4`\n  font-size: 16px;\n  margin-top: 20px;\n  margin-bottom: 5px;\n  margin: 0px;\n`;\nexport const OverviewText = styled.p`\n  font-size: 10px;\n  width: 700px;\n  margin-top: 5px;\n`;\n\nexport const GenresTitle = styled.h4`\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const GenreItem = styled.li`\n  margin-bottom: 0px;\n  font-size: 10px;\n`;\n\nexport const AdditionalInfoTitle = styled.p`\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0px;\n`;\n\nexport const AdditionalInfoItem = styled.li`\n  font-size: 12px;\n  margin-bottom: 5px;\n`;\n\nexport const AdditionalInfoLink = styled(Link)`\n  color: #e50914;\n  text-decoration: none;\n  font-size: 8px;\n`;\n\nexport const CastReviewsLink = styled(Link)`\n  color: #e50914;\n  text-decoration: none;\n  font - size: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport * as GetMovies from '../api-axios';\n\nimport {\n  MovieDetailsContainer,\n  BackButton,\n  MovieImage,\n  MovieTitle,\n  UserScore,\n  OverviewTitle,\n  GenresTitle,\n  GenresList,\n  GenreItem,\n  AdditionalInfoTitle,\n  AdditionalInfoList,\n  AdditionalInfoItem,\n  AdditionalInfoLink,\n  CastReviewsLink,\n  OverviewText,\n} from '../styled/MovieDetails';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const [movie, setMovie] = useState();\n  const navigate = useNavigate();\n  const goBack = () => {\n    navigate(-1);\n  };\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const { data } = await GetMovies.getMovieDetails(params.movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log('Error!');\n      } finally {\n      }\n    }\n    getMovie();\n  }, [params.movieId]);\n  return (\n    <MovieDetailsContainer>\n      {movie && (\n        <div>\n          <BackButton onClick={goBack}>Go back</BackButton>\n          <MovieImage\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.original_title}\n          />\n          <MovieTitle>\n            {movie.original_title} ({movie.release_date})\n          </MovieTitle>\n          <UserScore>User Score: {movie.popularity}%</UserScore>\n          <OverviewTitle>Overview</OverviewTitle>\n          <OverviewText>{movie.overview}</OverviewText>\n          <GenresTitle>Genres</GenresTitle>\n          <GenresList>\n            {movie.genres.map(genre => (\n              <GenreItem key={genre.id}>{genre.name}</GenreItem>\n            ))}\n          </GenresList>\n          <AdditionalInfoTitle>Additional Information</AdditionalInfoTitle>\n          <AdditionalInfoList>\n            <AdditionalInfoItem>\n              <AdditionalInfoLink to={`/movies/${params.movieId}/cast`}>\n                Cast\n              </AdditionalInfoLink>\n            </AdditionalInfoItem>\n            <AdditionalInfoItem>\n              <CastReviewsLink to={`/movies/${params.movieId}/reviews`}>\n                Reviews\n              </CastReviewsLink>\n            </AdditionalInfoItem>\n          </AdditionalInfoList>\n          <Outlet />\n        </div>\n      )}\n    </MovieDetailsContainer>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","getMovies","search","axios","result","getTopMovies","getMovieDetails","id","getMovieCast","getMovieReviews","MovieDetailsContainer","styled","BackButton","MovieImage","MovieTitle","UserScore","OverviewTitle","OverviewText","GenresTitle","GenresList","GenreItem","AdditionalInfoTitle","AdditionalInfoList","AdditionalInfoItem","AdditionalInfoLink","Link","CastReviewsLink","params","useParams","useState","movie","setMovie","navigate","useNavigate","useEffect","GetMovies","movieId","data","console","log","getMovie","onClick","src","poster_path","alt","original_title","release_date","popularity","overview","genres","map","genre","name","to"],"sourceRoot":""}