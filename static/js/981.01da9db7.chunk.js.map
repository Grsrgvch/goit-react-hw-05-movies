{"version":3,"file":"static/js/981.01da9db7.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAS,mCAAG,WAAMC,GAAN,uFACFC,EAAAA,EAAAA,IAAA,0DACgCD,EADhC,oBACkDF,IAFhD,cACjBI,EADiB,yBAIhBA,GAJgB,2CAAH,sDAMTC,EAAY,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,iFACuDH,IAFlD,cACpBI,EADoB,yBAInBA,GAJmB,2CAAH,qDAOZE,EAAe,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,oBACiCP,IAFzB,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,sDAOfI,EAAY,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCP,IAFpC,cACpBI,EADoB,yBAKnBA,GALmB,2CAAH,sDAOZK,EAAe,mCAAG,WAAMF,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCP,IAFjC,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,qD,8JC9BfM,EAAgBC,EAAAA,EAAAA,IAAH,4GAObC,EAAWD,EAAAA,EAAAA,GAAH,4IASRE,EAAWF,EAAAA,EAAAA,GAAH,4O,SC2BrB,EAxCa,WACX,IAAMG,GAASC,EAAAA,EAAAA,MAGf,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAIcC,EAAAA,GAAuBN,EAAOO,SAJ5C,gBAGcC,EAHd,EAGMC,KAAQD,KAEVJ,EAASI,GALb,gDAOIE,QAAQC,IAAI,UAPhB,sGADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,CAACZ,EAAOO,WAET,SAACX,EAAD,WACE,SAACE,EAAD,UACGK,GACCA,EAAMU,KAAI,SAAAL,GAAI,OACZ,UAACT,EAAD,WACGS,EAAKM,cACJ,gBACEC,IAAG,8CAAyCP,EAAKM,cACjDE,IAAKR,EAAKS,QAGZ,gBAAKF,IA5BjB,uKA4B2CC,IAAKR,EAAKS,QAE3C,uBAAIT,EAAKS,SATIT,EAAKf,GADR,OAgBvB,C","sources":["api-axios.js","styled/Cast.styled.jsx","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0ca8801a722358b1eb2bcacbc83f2a91';\n\nexport const getMovies = async search => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}`\n  );\n  return result;\n};\nexport const getTopMovies = async () => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return result;\n};\n\nexport const getMovieDetails = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n\n  return result;\n};\nexport const getMovieCast = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return result;\n};\nexport const getMovieReviews = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return result;\n};\n","import styled from '@emotion/styled';\nexport const CastContainer = styled.div`\n  background-color: #000;\n  color: #fff;\n  padding: 20px;\n  text-align: center;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CastItem = styled.li`\n  width: calc(16.666% - 20px);\n  margin: 0;\n\n  img {\n    max-width: 100%;\n    height: auto;\n    border-radius: 50%;\n  }\n\n  p {\n    font-size: 18px;\n    margin-top: 10px;\n    text-align: center;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as GetMovies from '../api-axios';\nimport { CastContainer, CastList, CastItem } from '../styled/Cast.styled';\nconst Cast = () => {\n  const params = useParams();\n  const placeholderImageURL =\n    'https://img.freepik.com/premium-photo/man-without-a-face-an-impersonal-man-mannequin-anonymous-portrait-of-a-man-abstract-identity-illustration_91497-8312.jpg?w=826';\n  const [casts, setCasts] = useState([]);\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const {\n          data: { cast },\n        } = await GetMovies.getMovieCast(params.movieId);\n        setCasts(cast);\n      } catch (error) {\n        console.log('Error!');\n      } finally {\n      }\n    }\n    getMovie();\n  }, [params.movieId]);\n  return (\n    <CastContainer>\n      <CastList>\n        {casts &&\n          casts.map(cast => (\n            <CastItem key={cast.id}>\n              {cast.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/original/${cast.profile_path}`}\n                  alt={cast.name}\n                />\n              ) : (\n                <img src={placeholderImageURL} alt={cast.name} />\n              )}\n              <p>{cast.name}</p>\n            </CastItem>\n          ))}\n      </CastList>\n    </CastContainer>\n  );\n};\nexport default Cast;\n"],"names":["API_KEY","getMovies","search","axios","result","getTopMovies","getMovieDetails","id","getMovieCast","getMovieReviews","CastContainer","styled","CastList","CastItem","params","useParams","useState","casts","setCasts","useEffect","GetMovies","movieId","cast","data","console","log","getMovie","map","profile_path","src","alt","name"],"sourceRoot":""}