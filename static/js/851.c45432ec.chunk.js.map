{"version":3,"file":"static/js/851.c45432ec.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAS,mCAAG,WAAMC,GAAN,uFACFC,EAAAA,EAAAA,IAAA,0DACgCD,EADhC,oBACkDF,IAFhD,cACjBI,EADiB,yBAIhBA,GAJgB,2CAAH,sDAMTC,EAAY,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,iFACuDH,IAFlD,cACpBI,EADoB,yBAInBA,GAJmB,2CAAH,qDAOZE,EAAe,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,oBACiCP,IAFzB,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,sDAOfI,EAAY,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCP,IAFpC,cACpBI,EADoB,yBAKnBA,GALmB,2CAAH,sDAOZK,EAAe,mCAAG,WAAMF,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCP,IAFjC,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,qD,oLC7BfM,EAAkBC,EAAAA,EAAAA,IAAH,iLAUfC,EAAcD,EAAAA,EAAAA,GAAH,2FAMXE,EAAaF,EAAAA,EAAAA,KAAH,uWAsBVG,EAAYH,EAAAA,EAAAA,GAAH,gJASTI,EAAYJ,EAAAA,EAAAA,GAAH,+RAUTK,GAAYL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,iW,SCsBtB,EApEe,WAAO,IAAD,EACnB,GAAoCO,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAK,UAAGF,EAAOG,IAAI,gBAAd,QAA0B,GAmCrC,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,yFACgB,KAAVF,EADN,iEAMYG,EAAAA,GAAoBH,GANhC,gBAKYI,EALZ,EAKIC,KAAQD,QAGVV,EAAaU,GARf,4CADc,uBAAC,WAAD,wBAgBdE,EACD,GAAE,CAACN,KAGF,UAAClB,EAAD,YACE,SAACE,EAAD,6BACA,UAACC,EAAD,CAAYsB,SAhCK,SAAAC,GAEnB,GADAA,EAAIC,iBACe,KAAflB,EACF,OAAOmB,EAAAA,GAAAA,MAAY,0BAGrBZ,EAAOa,IAAI,QAASpB,GACpBQ,EAAUD,EACX,EAwBG,WACE,mBAAQc,KAAK,SAAb,qBACA,kBAAOA,KAAK,OAAOC,SArCJ,SAAAL,GACnBhB,EAAcgB,EAAIM,OAAOC,MAC1B,QAqCG,SAAC7B,EAAD,UACGO,EAAUuB,KAAI,SAAAC,GAAQ,OACrB,SAAC9B,EAAD,WACE,UAACC,EAAD,CAAW8B,GAAE,kBAAaD,EAAStC,IAAMwC,MAAO,CAAEC,KAAMzB,GAAxD,UACGsB,EAASI,aACR,gBACEC,IAAG,0CAAqCL,EAASI,aACjDE,IAAKN,EAASO,kBAGhB,gBAAKF,IAlDjB,yGAkD2CC,IAAKN,EAASO,kBAE/C,uBAAIP,EAASO,qBAVDP,EAAStC,GADJ,QAkB9B,C","sources":["api-axios.js","styled/Movies.stiled.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0ca8801a722358b1eb2bcacbc83f2a91';\n\nexport const getMovies = async search => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}`\n  );\n  return result;\n};\nexport const getTopMovies = async () => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return result;\n};\n\nexport const getMovieDetails = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n\n  return result;\n};\nexport const getMovieCast = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return result;\n};\nexport const getMovieReviews = async id => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return result;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MoviesContainer = styled.div`\n  background-color: #000;\n  color: #fff;\n  padding: 20px;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SearchTitle = styled.h1`\n  font-size: 24px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n\n  button {\n    background-color: #e50914;\n    color: #fff;\n    border: none;\n    padding: 10px 20px;\n    cursor: pointer;\n    font-size: 16px;\n  }\n\n  input {\n    font-size: 16px;\n    padding: 10px;\n    margin-left: 10px;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  width: calc(16.666% - 20px);\n  margin: 0;\n  &:hover {\n    box-shadow: 12px -9px 5px 0px rgba(232, 227, 227, 0.75);\n    -webkit-box-shadow: 12px -9px 5px 0px rgba(232, 227, 227, 0.75);\n    -moz-box-shadow: 12px -9px 5px 0px rgba(232, 227, 227, 0.75);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  p {\n    font-size: 18px;\n    margin-top: 10px;\n    text-align: center;\n  }\n\n  &:hover {\n    text-shadow: 7px -4px 2px rgba(218, 213, 213, 0.6);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport * as GetMovies from '../api-axios';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nimport {\n  MoviesContainer,\n  SearchTitle,\n  SearchForm,\n  MovieList,\n  MovieItem,\n  MovieLink,\n} from '../styled/Movies.stiled';\nconst Movies = () => {\n  const [inputQuery, setInputQuery] = useState('');\n\n  const [arrMovies, setArrMovies] = useState([]);\n  const location = useLocation();\n  const [params, setParams] = useSearchParams();\n  const query = params.get('query') ?? '';\n  const placeholderImageURL =\n    'https://kartinki.pics/uploads/posts/2022-03/1646240334_2-kartinkin-net-p-kartinki-krasivaya-noch-2.jpg';\n  const handleChange = evt => {\n    setInputQuery(evt.target.value);\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (inputQuery === '') {\n      return toast.error('Fill in the search bar');\n    }\n\n    params.set('query', inputQuery);\n    setParams(params);\n  };\n\n  useEffect(() => {\n    async function getSearchMovies() {\n      if (query === '') {\n        return;\n      }\n      const {\n        data: { results },\n      } = await GetMovies.getMovies(query);\n\n      setArrMovies(results);\n      try {\n      } catch (error) {\n        console.log('Error!');\n      } finally {\n      }\n    }\n    getSearchMovies();\n  }, [query]);\n\n  return (\n    <MoviesContainer>\n      <SearchTitle>Search Movies</SearchTitle>\n      <SearchForm onSubmit={handleSubmit}>\n        <button type=\"submit\">Search</button>\n        <input type=\"text\" onChange={handleChange} />\n      </SearchForm>\n      <MovieList>\n        {arrMovies.map(arrMovie => (\n          <MovieItem key={arrMovie.id}>\n            <MovieLink to={`/movies/${arrMovie.id}`} state={{ from: location }}>\n              {arrMovie.poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${arrMovie.poster_path}`}\n                  alt={arrMovie.original_title}\n                />\n              ) : (\n                <img src={placeholderImageURL} alt={arrMovie.original_title} />\n              )}\n              <p>{arrMovie.original_title}</p>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </MoviesContainer>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","getMovies","search","axios","result","getTopMovies","getMovieDetails","id","getMovieCast","getMovieReviews","MoviesContainer","styled","SearchTitle","SearchForm","MovieList","MovieItem","MovieLink","Link","useState","inputQuery","setInputQuery","arrMovies","setArrMovies","location","useLocation","useSearchParams","params","setParams","query","get","useEffect","GetMovies","results","data","getSearchMovies","onSubmit","evt","preventDefault","toast","set","type","onChange","target","value","map","arrMovie","to","state","from","poster_path","src","alt","original_title"],"sourceRoot":""}